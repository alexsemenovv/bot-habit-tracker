from handlers.custom_handlers.list_habits import gen_inline_markup, handle_habit_selection, show_list_habits
from loader import bot
from request_to_api.habits_api import (
    request_to_get_habit_by_id,
    request_to_delete_habit_by_id,
)
from telebot.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton


def gen_inline_markup_for_back_to_crud(habit_id: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥ –∫ –¥–µ–π—Å—Ç–≤–∏—è–º'
    :param habit_id: int - id –ø—Ä–∏–≤—ã—á–∫–∏
    :return: –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É InlineKeyboardMarkup
    """

    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton(text="üîô–ù–∞–∑–∞–¥", callback_data=f"back_to_crud_{habit_id}"),
    )
    return keyboard


def gen_inline_markup_yes_or_no(habit_id: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏, —Å –∫–Ω–æ–ø–∫–∞–º–∏ '–î–∞', '–ù–µ—Ç'
    :param habit_id: int - id –ø—Ä–∏–≤—ã—á–∫–∏
    :return: –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É InlineKeyboardMarkup
    """
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton(text="–î–∞", callback_data=f"yes_{habit_id}"),
        InlineKeyboardButton(text="–ù–µ—Ç", callback_data=f"no_delete_habit_{habit_id}"),
    )
    return keyboard


@bot.callback_query_handler(
    func=lambda callback_query: (callback_query.data.startswith("description_"))
)
def handle_description_habit(callback_query: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏
    :param callback_query: CallbackQuery - –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ 'description_'
    :return: None
    """
    habit_id = int(callback_query.data.split("_")[1])
    habit = request_to_get_habit_by_id(habit_id)
    info = (
        "*–ü—Ä–∏–≤—ã—á–∫–∞* ‚Ññ{id}"
        "\n*–ù–∞–∑–≤–∞–Ω–∏–µ:* {name}"
        "\n*–û–ø–∏—Å–∞–Ω–∏–µ:* {description}"
        "\n*–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:* {start}"
        "\n*–î–Ω–µ–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:* {target_days}"
    ).format(
        id=habit.get("id"),
        name=habit.get("name"),
        description=habit.get("description"),
        target_days=habit.get("target_days"),
        start=habit.get("start_date"),
    )

    bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text=info,
        reply_markup=gen_inline_markup_for_back_to_crud(habit_id),
        parse_mode="Markdown",
    )


@bot.callback_query_handler(
    func=lambda callback_query: (callback_query.data.startswith("delete_"))
)
def handle_delete_habit(callback_query: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫, —É–¥–∞–ª—è–µ—Ç –ø—Ä–∏–≤—ã—á–∫—É
    :param callback_query: CallbackQuery - –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ 'delete_'
    :return: None
    """
    habit_id = int(callback_query.data.split("_")[1])
    bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text=f"–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É?",
        reply_markup=gen_inline_markup_yes_or_no(habit_id)
    )


@bot.callback_query_handler(
    func=lambda callback_query: (callback_query.data.startswith("yes_"))
)
def handle_yes_delete_habit(callback_query: CallbackQuery) -> None:
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ id
    :param callback_query: –ó–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ yes_
    :return: None
    """
    habit_id = int(callback_query.data.split("_")[1])
    result = request_to_delete_habit_by_id(habit_id)
    if result:
        bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text="–ü—Ä–∏–≤—ã—á–∫–∞ —É–¥–∞–ª–µ–Ω–∞!\n–°–ø—Ä–∞–≤–∫–∞ /help",
        )
    else:
        bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text="–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞",
        )


@bot.callback_query_handler(
    func=lambda callback_query: (callback_query.data.startswith("no_delete_habit_"))
)
def handle_no_delete_habit(callback_query: CallbackQuery) -> None:
    """
    –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ id
    :param callback_query: –ó–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ no_delete_habit_
    :return: None
    """
    handle_habit_selection(callback_query, edit=True)


@bot.callback_query_handler(
    func=lambda callback_query: (callback_query.data == "back_to_list_habits")
)
def handle_btn_back(callback_query: CallbackQuery) -> None:
    """
    –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–Ω–∞–∑–∞–¥' - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—ã—á–µ–∫
    :param callback_query: CallbackQuery - –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–≤–µ–Ω 'back_to_list_habits'
    :return: None
    """
    show_list_habits(callback_query.message, edit=True)


@bot.callback_query_handler(
    func=lambda callback_query: (callback_query.data.startswith("back_to_crud_"))
)
def handle_btn_back(callback_query: CallbackQuery) -> None:
    """
    –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–Ω–∞–∑–∞–¥' - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø—Ä–∏–≤—ã—á–∫–∏
    :param callback_query: CallbackQuery - –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ 'back_to_crud'
    :return: None
    """
    handle_habit_selection(callback_query, edit=True)
